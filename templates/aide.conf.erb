#
# Generated by Chef for <%= node['fqdn'] %>.
# Local modifications will be overwritten.
#
# See https://linux.die.net/man/5/aide.conf

@@define DBDIR <%= @config['dbdir'] %>
@@define LOGDIR <%= @config['logdir'] %>

# The location of the database to be read.
database=<%= @config['database'] %>

# The location of the database to be written.
#database_out=sql:host:port:database:login_name:passwd:table
#database_out=file:aide.db.new
database_out=<%= @config['database_out'] %>

# Whether to gzip the output to database.
gzip_dbout=<%= (@config['gzip_dbout']) ? 'yes' : 'no' %>

# Default.
verbose=<%= @config['verbose'] %>

<% unless @config['report_url'].nil? %>
  <% @config['report_url'].each do |rpt| %>
report_url=<%= rpt %>
  <%- end %>
<%- end %>
#report_url=stderr
#NOT IMPLEMENTED report_url=mailto:root@foo.com
#NOT IMPLEMENTED report_url=syslog:LOG_AUTH

# These are the default rules.
#
#p:      permissions
#i:      inode:
#n:      number of links
#u:      user
#g:      group
#s:      size
#b:      block count
#m:      mtime
#a:      atime
#c:      ctime
#S:      check for growing size
#acl:           Access Control Lists
#selinux        SELinux security context
#xattrs:        Extended file attributes
#md5:    md5 checksum
#sha1:   sha1 checksum
#sha256:        sha256 checksum
#sha512:        sha512 checksum
#rmd160: rmd160 checksum
#tiger:  tiger checksum

#haval:  haval checksum (MHASH only)
#gost:   gost checksum (MHASH only)
#crc32:  crc32 checksum (MHASH only)
#whirlpool:     whirlpool checksum (MHASH only)

#R:             p+i+n+u+g+s+m+c+acl+selinux+xattrs+md5
#L:             p+i+n+u+g+acl+selinux+xattrs
#E:             Empty group
#>:             Growing logfile p+u+g+i+n+S+acl+selinux+xattrs

# You can create custom rules like this.
# With MHASH...
# ALLXTRAHASHES = sha1+rmd160+sha256+sha512+whirlpool+tiger+haval+gost+crc32
# ALLXTRAHASHES = sha1+rmd160+sha256+sha512+tiger

# Everything but access time (Ie. all changes)
# EVERYTHING = R+ALLXTRAHASHES

# Sane, with multiple hashes
# NORMAL = R+rmd160+sha256+whirlpool
# NORMAL = R+rmd160+sha256 (Centos 6)
# NORMAL = sha256 (Centos 7)

# For directories, don't bother doing hashes.
# DIR = p+i+n+u+g+acl+selinux+xattrs

# Access control only
# PERMS = p+i+u+g+acl+selinux (Centos 6)
# PERMS = p+u+g+acl+selinux+xattrs (Centos 7)

# Access + inode changes + file type.
# STATIC = p+u+g+acl+selinux+xattrs+i+n+b+c+ftype (Centos 7)

# Logfiles only check access w/o xattrs.
# LOG = > (Centos 6)
# LOG = p+u+g+n+acl+selinux+ftype (Centos 7)

# Just do md5 and sha256 hashes
# LSPP = R+sha256 (Centos 6)

# Content + file type.
# CONTENT = sha256+ftype (Centos 7)

# Extended content + file type + access.
# CONTENT_EX = sha256+ftype+p+u+g+n+acl+selinux+xattrs (Centos 7)

# Some files get updated automatically, so the inode/ctime/mtime change
# but we want to know when the data inside them changes.
# DATAONLY =  p+n+u+g+s+acl+selinux+xattrs+md5+sha256+rmd160+tiger (Centos 6)
# DATAONLY =  p+n+u+g+s+acl+selinux+xattrs+sha256 (Centos 7)

# Define local rules
<% @config['rules'].each do |name, rule| %>
<%= name %> = <%= rule %>
<%- end %>

# Next decide what directories/files you want in the database. Aide
# uses a first match system. Put file specific instructions before generic
# matches. e.g. Put file matches before directories.

<% @config['paths'].each do |path, rule| %>
  <% if rule != '!' %>
<%= path %> <%= rule %>
  <% else %>
!<%= path %>
  <%- end %>
<%- end %>
